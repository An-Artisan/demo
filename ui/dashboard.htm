<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <title>币币交易平台</title>
    <script src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        body {
            font-family: "PingFang SC", "Microsoft YaHei", sans-serif;
            background: #f2f3f5;
            margin: 0;
            padding: 20px;
        }
        .container { max-width: 1400px; margin: auto; }
        .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
        .header select { padding: 6px 10px; font-size: 16px; border-radius: 5px; border: 1px solid #ccc; }
        .info-bar { background: #fff; padding: 15px 20px; border-radius: 8px; font-size: 16px; box-shadow: 0 2px 6px rgba(0,0,0,0.05); margin-bottom: 15px; }
        .info-bar.up { color: green; }
        .info-bar.down { color: red; }
        .grid { display: grid; grid-template-columns: 2fr 1fr; gap: 20px; }
        .kline-box { background: #fff; border-radius: 10px; padding: 10px; box-shadow: 0 1px 6px rgba(0,0,0,0.05); height: 450px; }
        #klineChart { width: 100%; height: 100%; }
        .panel-wrap { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; margin-top: 20px; }
        .panel { background: #fff; border-radius: 10px; padding: 15px; box-shadow: 0 1px 6px rgba(0,0,0,0.05); }
        .panel h3 { font-size: 18px; margin-bottom: 12px; border-bottom: 1px solid #eee; padding-bottom: 8px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { text-align: left; padding: 6px 8px; font-size: 14px; }
        tr:nth-child(even) { background: #fafafa; }
        th { background: #f0f0f0; font-weight: bold; }
        .trade-form input, .trade-form select, .trade-form button {
            width: 100%; padding: 10px; margin-bottom: 10px; border-radius: 5px; font-size: 14px; border: 1px solid #ccc;
        }
        .trade-form button { background-color: #12b886; color: white; font-weight: bold; cursor: pointer; border: none; }
        .trade-form button:hover { background-color: #0ca678; }
        .tabs { margin-top: 30px; display: flex; gap: 10px; justify-content: center; }
        .tabs button { padding: 8px 20px; border: none; background: #ddd; border-radius: 5px; font-size: 14px; cursor: pointer; }
        .tabs button:hover { background: #bbb; }
        .tab-content { margin-top: 10px; background: #fff; border-radius: 8px; padding: 20px; box-shadow: 0 1px 6px rgba(0,0,0,0.05); }
    </style>
</head>
<body>
<div class="container">
    <div class="header">
        <label>
            币种选择：
            <select id="coinPairSelect"></select>
        </label>
        <div class="info-bar" id="marketInfo">当前币种: BTC/USDT，价格: --，涨幅: --</div>
    </div>
    <div class="grid">
        <div class="kline-box">
            <div id="klineChart"></div>
        </div>
        <div class="panel">
            <h3>最新成交</h3>
            <table id="tradeTable"></table>
        </div>
    </div>
    <div class="panel-wrap">
        <div class="panel">
            <h3>盘口</h3>
            <table id="orderBookTable"></table>
        </div>
        <div class="panel trade-form">
            <h3>交易</h3>
            <select id="orderType">
                <option value="limit">限价</option>
                <option value="market">市价</option>
            </select>
            <input type="number" id="priceInput" placeholder="价格（USDT）">
            <input type="number" id="amountInput" placeholder="数量（BTC）">
            <button onclick="placeOrder()">买入</button>
        </div>
        <div class="panel">
            <h3>资产</h3>
            <table id="assetTable"></table>
        </div>
    </div>
    <div class="tabs">
        <button onclick="loadTab('current')">当前委托</button>
        <button onclick="loadTab('history')">委托历史</button>
        <button onclick="loadTab('trades')">成交记录</button>
    </div>
    <div class="tab-content">
        <table id="tabTable"></table>
    </div>
</div>

<script>
    const useAjax = false;
    let currentTab = 'current';
    let currentCoin = 'BTC';

    function fetchCoinList() {
        axios.get('http://localhost:8000/coins/get-currency-list').then(res => {
            if (res.data.code === 200) {
                let list = res.data.data;
                const priority = ['BTC_USDT', 'ETH_USDT'];
                const sortedList = [
                    ...list.filter(item => priority.includes(item.id)).sort((a, b) => priority.indexOf(a.id) - priority.indexOf(b.id)),
                    ...list.filter(item => !priority.includes(item.id))
                ];
                const select = document.getElementById('coinPairSelect');
                select.innerHTML = '';
                sortedList.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item.base;
                    option.text = `${item.base}/${item.quote}`;
                    select.appendChild(option);
                });
                currentCoin = sortedList[0].base;
                updatePage(currentCoin);
            }
        });
    }

    function fetchMarketInfo(base) {
        axios.get('http://localhost:8000/coins/get-currency-info?currency_pair=' + `${base}_USDT`).then(res => {
            if (res.data.code === 200) {
                const info = res.data.data.find(item => item.currency_pair === `${base}_USDT`);
                if (info) {
                    const change = parseFloat(info.change_percentage);
                    const infoBar = document.getElementById('marketInfo');
                    infoBar.innerText = `当前币种: ${info.currency_pair.replace('_', '/')}, 价格: ${info.last}, 涨幅: ${change.toFixed(2)}%`;
                    infoBar.className = 'info-bar ' + (change >= 0 ? 'up' : 'down');
                }
            }
        });
    }

    function fetchKlineData(base) {
        axios.get(`http://localhost:8000/coins/get-currency-kline?currency_pair=${base}_USDT&interval=1h&limit=1000`).then(res => {
            if (res.data.code === 200) {
                const klineRaw = res.data.data;
                const klineFormatted = klineRaw.map(item => {
                    const time = new Date(item[0] * 1000).toLocaleString('zh-CN', {
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit'
                    }).replace(/\//g, '-');
                    return [time, parseFloat(item[4]), parseFloat(item[2]), parseFloat(item[3]), parseFloat(item[5])];
                });
                renderKline(klineFormatted);
            }
        });
    }

    function fetchOrderBook(base) {
        axios.get(`http://localhost:8000/coins/get-currency-depth?currency_pair=${base}_USDT`)
            .then(res => {
                if (res.data.code === 200) {
                    const asks = res.data.data.asks.slice(0, 10).reverse(); // 卖盘倒序（卖1在底部）
                    const bids = res.data.data.bids.slice(0, 10);           // 买盘正序（买1在顶部）

                    let html = '<tr><th>卖出价</th><th>卖出量</th><th>买入价</th><th>买入量</th></tr>';
                    for (let i = 0; i < 10; i++) {
                        const ask = asks[i] || ["", ""];
                        const bid = bids[i] || ["", ""];
                        html += `<tr>
                        <td>${ask[0]}</td><td>${ask[1]}</td>
                        <td>${bid[0]}</td><td>${bid[1]}</td>
                    </tr>`;
                    }
                    document.getElementById('orderBookTable').innerHTML = html;
                }
            });
    }


    function updatePage(coinKey) {
        document.getElementById('amountInput').placeholder = `数量（${coinKey}）`;
        fetchMarketInfo(coinKey);
        fetchKlineData(coinKey);
        fetchOrderBook(coinKey);

    }

    function renderKline(klineData) {
        const chart = echarts.init(document.getElementById('klineChart'));
        const times = klineData.map(i => i[0]);
        const values = klineData.map(i => i.slice(1));
        chart.setOption({
            tooltip: {
                trigger: 'axis',
                formatter: function (params) {
                    const d = params[0];
                    const val = d.data;
                    return `${d.axisValue}<br/>开盘: ${val[0]}<br/>最高: ${val[1]}<br/>最低: ${val[2]}<br/>收盘: ${val[3]}`;
                }
            },
            xAxis: { type: 'category', data: times },
            yAxis: { type: 'value' },
            series: [{
                type: 'candlestick',
                data: values,
                itemStyle: { color: '#ec0000', color0: '#00da3c', borderColor: '#8A0000', borderColor0: '#008F28' }
            }]
        });
    }

    function placeOrder() {
        alert('模拟下单成功');
    }

    function loadTab(tab) {
        currentTab = tab;
    }

    document.getElementById('coinPairSelect').addEventListener('change', function () {
        const coinKey = this.value;
        updatePage(coinKey);
    });

    window.addEventListener('DOMContentLoaded', () => {
        fetchCoinList();
    });
</script>
</body>
</html>
